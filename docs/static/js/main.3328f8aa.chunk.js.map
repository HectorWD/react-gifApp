{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/CategoryGridItem.js","components/CategoryGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","category","setCategory","onSubmit","e","preventDefault","cats","type","value","onChange","target","placeholder","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","CategoryGridItem","className","src","alt","CategoryGrid","loading","state","setState","useEffect","then","useFetchGifs","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLA8BeA,EA3BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAcA,OACI,sBAAMC,SARS,SAACC,GAChBA,EAAEC,iBACY,KAAXJ,IACCF,GAAc,SAAAO,GAAI,OAAGL,GAAH,mBAAeK,OARrCJ,EAAY,MAaZ,SACI,uBACAK,KAAK,OACLC,MAAOP,EACPQ,SAfQ,SAACL,GACbF,EAAYE,EAAEM,OAAOF,QAejBG,YAAY,6B,+BCxBXC,EAAO,uCAAE,WAAOX,GAAP,uBAAAY,EAAA,6DACZC,EADY,0DAC2CC,UAAUd,GADrD,sDAEAe,MAAMF,GAFN,cAEZG,EAFY,gBAGIA,EAAKC,OAHT,uBAGVC,EAHU,EAGVA,KAEFC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAYXM,GAZW,4CAAF,sDCcLO,EAZU,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC7B,OACI,sBAAKc,UAAU,OAAf,UACG,qBACAC,IAAKf,EACLgB,IAAKN,IAEL,4BAAIA,QCeAO,EApBM,SAAC,GAAgB,IAAf9B,EAAc,EAAdA,SACnB,ECFwB,SAACA,GAC1B,MAA0BD,mBAAS,CAC/BmB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OARAC,qBAAU,WACNvB,EAAQX,GAAUmC,MAAK,SAACd,GACvBY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAGf,CAAC/B,IACIgC,EDXuBI,CAAapC,GAA9BwB,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAEnB,OACI,qCACA,qBAAIJ,UAAU,8CAAd,cAA8D3B,EAA9D,OACC+B,GAAW,2CACZ,qBAAKJ,UAAU,gDAAf,SACCH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEUNe,EApBA,WACX,MAAoCtC,mBAAS,IAA7C,mBAAOuC,EAAP,KAAmBxC,EAAnB,KAEA,OACI,gCACI,yCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACKwC,EAAWlB,KAAI,SAACpB,GAAD,OACZ,cAAC,EAAD,CAECA,SAAUA,GADLA,Y,MCT1BuC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3328f8aa.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [category, setCategory] = useState('');\r\n    const reset=()=>{\r\n        setCategory('');\r\n    }\r\n    const handleAdd=(e)=>{\r\n        setCategory(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(category!==''){\r\n            setCategories(cats=>[category,...cats]);\r\n            reset();\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={category}\r\n            onChange={handleAdd}\r\n            placeholder='Escribe una categoria'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n};\r\n","export const getGifs= async (category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=qCz0V5y21OnbUPJ8Ra2aPZg2u6pCgicZ`;\r\n    const resp= await fetch(url);\r\n    const  {data} = await resp.json();\r\n\r\n    const gifs= data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url,\r\n        }\r\n     }) \r\n    return(gifs)\r\n}","import React from 'react'\r\n\r\nconst CategoryGridItem = ({title,url}) => {\r\n    return (\r\n        <div className='card'>\r\n           <img  \r\n           src={url}\r\n           alt={title}\r\n           />\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport CategoryGridItem from './CategoryGridItem';\r\n\r\nconst CategoryGrid = ({category}) => {\r\n    const {data:images,loading}= useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className='card-grid animate__animated animate__bounce'> {category} </h3> \r\n        {loading && <p>Cargando..</p>}\r\n        <div className='card-grid animate__animated animate__fadeInUp'>\r\n        {images.map((img)=>\r\n            <CategoryGridItem \r\n            key={img.id} \r\n            {...img}\r\n            />\r\n        )}\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n       data:[],\r\n       loading:true,\r\n   })\r\n   useEffect(()=>{\r\n       getGifs(category).then((img)=>{\r\n        setState({\r\n            data:img,\r\n            loading:false,\r\n        });\r\n       })\r\n   },[category]);\r\n   return state;\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport CategoryGrid from './components/CategoryGrid';\r\n\r\nconst GifApp = () => {\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category) =>\r\n                    <CategoryGrid \r\n                     key={category}\r\n                     category={category} \r\n                     />\r\n                )}\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifApp from './GifApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}